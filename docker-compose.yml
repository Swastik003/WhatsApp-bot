version: '3.8'

services:
  whatsapp-qr:
    build: .
    container_name: whatsapp-qr-scanner
    restart: unless-stopped
    user: "0:0"
    ports:
      - "3005:3000"
    env_file:
      - .env
    volumes:
      # Persist WhatsApp session data
      - whatsapp_session:/app/.wwebjs_auth
      - whatsapp_cache:/app/.wwebjs_cache
      # Persist Chromium user data directory
      - chrome_data:/app/chrome-data
      # Persist API keys
      - ./api-keys.json:/app/api-keys.json
    networks:
      - whatsapp-network
    command: >-
      sh -c "\
      chown -R 1001:1001 /app/chrome-data /app/.wwebjs_auth /app/.wwebjs_cache 2>/dev/null || true; \
      rm -f /app/chrome-data/SingletonLock /app/chrome-data/SingletonCookie /app/chrome-data/SingletonSocket /app/chrome-data/LOCK 2>/dev/null || true; \
      find /app/chrome-data -maxdepth 1 -type f -name '.org.chromium.*' -exec rm -f {} + 2>/dev/null || true; \
      su whatsapp -s /bin/sh -c 'npm start'"
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    # Security options
    security_opt:
      - no-new-privileges:true
    # Health check
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/config', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  whatsapp_session:
    driver: local
  whatsapp_cache:
    driver: local
  chrome_data:
    driver: local

networks:
  whatsapp-network:
    driver: bridge
